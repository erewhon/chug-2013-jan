#+TITLE:       A Brief Introduction to Immutant
#+AUTHOR:      Steven Byrnes
#+EMAIL:       erewhon@flatland.org
#+DATE:        January 24, 2013
#+OPTIONS:     author:t toc:nil timestamp:nil creator:nil
#+LaTeX_CLASS: koma-article
#+LaTeX_CLASS_OPTIONS: [listof=flat, letterpaper, 10pt, abstract=true]
#####+LaTeX_CLASS_OPTIONS: [twocolumn,captions=tableheading,listof=flat, letterpaper, 11pt, abstract=true]
#+LaTeX_HEADER: \usepackage[AUTO]{inputenc}
#+LaTeX_HEADER: \usepackage[T1]{fontenc} 
#+LaTeX_HEADER: \usepackage[scaled]{beraserif}
#+LaTeX_HEADER: \usepackage[scaled]{berasans} 
#+LaTeX_HEADER: \usepackage[scaled]{beramono}
#+LaTeX_HEADER: \usepackage[style=authoryear-comp,natbib=true]{biblatex}
#+LaTeX_HEADER: \usepackage{paralist}
#+LaTeX_HEADER: \let\enumerate\compactenum
#+LaTeX_HEADER: \let\description\compactdesc
#+LaTeX_HEADER: \let\itemize\compactitem
#+LATEX_HEADER: \hypersetup{
#+LATEX_HEADER:     colorlinks,%
#+LATEX_HEADER:     citecolor=black,%
#+LATEX_HEADER:     filecolor=black,%
#+LATEX_HEADER:     linkcolor=blue,%
#+LATEX_HEADER:     urlcolor=black
#+LATEX_HEADER: }
#+EPRESENT_FRAME_LEVEL: 1

#+BEGIN_abstract

[[http://immutant.org/][Immutant]] is an application server for Clojure. Based on JBoss AS7, it
provides a rich foundation for building non-trivial applications,
including messaging, caching, jobs, clustering, and more.  Immutant
integrates with [[http://leiningen.org/][Leiningen]].  It is a sibling project to [[http://torquebox.org/][TorqueBox]], and
can be configured alongside TorqueBox in the same application server.
This allows polyglot applications in Java, Clojure, and Ruby to be
written and deployed within the same container.

#+END_abstract

## C-c C-e

# You want to deploy ...
#
#
# This could be very useful for those who work within an enterprise.

* Is this you?

Have a Clojure web app, and need
- multiple legacy database interop
- want messaging.  for realz
- have a number of boxes, and want to scale your app
- want something with a greater BAF [1]
  
[1] Boss Acceptance Factor; YBMV [2]
[2] Your Boss May Vary
  
* Or is this you?

continued...
- Not able to use Heroku or the ilk (too ala carte, too expensive, too
  inflexible), and raw EC2 is a little too... raw. 
- Want scalability, load balancing, messaging, and/or scheduling
- have some Ruby web code you need to interop with
- all of the above

* Then...

Immutant is here to help!

[[file:immutant_icon_256px_flipped.png]]


# Questions:
# - Does it +blend+ scale?
# - How do you fit it in to your existing enterprise?

* Who

Jim Crossley, Toby Crawley, and others from [[http://projectodd.org][project:odd]].

[[file:projectodd-logo.png]]

(project:odd is a research team within RedHat)

* Why

If you've worked with Tomcat or other containers, you'll probably feel
right at home.

Many enterprises are used to deploying this kind of thing and there's
a pretty good chance they're already running Tomcat or JBoss.

Reduces accidental complexity by giving you the entire stack.  Since
it's an app container, can run multiple Clojure apps simultaneously,
perhaps with their own version of Clojure.

+Wife+ Boss acceptance factor.

+Boss+ Ops acceptance factor.

[[file:redhat-logo.png]] 

* Features

- Built on JBoss AS7 (JEE)
- Asynchronous messaging (HornetMQ)
- Caching
- Scheduled jobs
- XA transactions
- Clustering
- Daemons
- Plays well with Leiningen

* Demo - A (Very) Quick Start

Add ={:plugins [[lein-immutant "0.14.1"]}=

#+begin_example
 $EDITOR ~/.lein/profiles.clj
 lein immutant install 0.8.0
 lein immutant run
#+end_example

# A bunch of output follows...

By default, it starts up messaging, scheduling, caching, and a Clojure
environment.

It starts up several services, but by default it only listens on
localhost, so no worries.

Port 8080 - web server.
Port 9990 - JBoss management console.

* Demo - Bringing in the web site

In a window:

#+begin_example
  git clone git@github.com:chug/cljhouston.git chug1
  cd chug1
  lein immutant init
  lein immutant run
#+end_example

Modify =init.clj= to contain:

#+begin_example
  (ns immutant.init
    (:require [immutant.web :as web]
              [immutant.util :as util]
              [noir.server :as server]))

  ;; To start a Noir app:
  (server/load-views (util/app-relative "src/cljhouston/views"))
  (web/start "/" (server/gen-handler {:mode :dev :ns 'cljhouston}))
#+end_example

and re-deploy, i.e.:

#+begin_example
  $EDITOR src/immutant/init.clj
  lein immutant deploy
  open http://localhost:8080/cljhouston/
#+end_example

* Demo - Adding a chatroom!?

Add messaging dependency, new code, and deploy:

#+begin_example
  $EDITOR src/cljhouston/fritter.clj
  $EDITOR src/immutant/init.clj
  $EDITOR src/cljhouston/views/welcome.clj
  lein immutant deploy
#+end_example

Now, test it:

#+begin_example
  curl -d message='Hello world!' http://localhost:8080/cljhouston/fritter
  curl -d message='Hello world again!' http://localhost:8080/cljhouston/fritter
#+end_example

* Next steps

Trivial to add:
- form for submitting
- date and IP of who added it
- bounded queue
- Ajax

* But wait, there's more...

Seems kind of overkill, since we're just running in a single JVM.
Could just use the atom without a queue.

Or...

* Demo - Spool up a cluster!

In one window:

#+begin_example
  cp -r ~/.lein/immutant/current/ /tmp/node2 
  lein immutant run --clustered -b 192.168.6.201
#+end_example

In another window:

#+begin_example
  rm -rf /tmp/node2/jboss/standalone/data
  IMMUTANT_HOME=/tmp/node2 lein immutant run --clustered -Djboss.node.name=two -b 192.168.6.202
#+end_example

Now, fritter away!

#+begin_example
  curl -d message='Clusterduck!' http://192.168.6.201:8080/cljhouston/fritter
#+end_example

If we need to deploy:

#+begin_example
  IMMUTANT_HOME=/tmp/node2 lein immutant deploy
#+end_example

# xxx : it should go to both things in cluster, but it isn't?
# http://immutant.org/tutorials/clustering/index.html

* Pipelines

* Polyglot

Using Overlay, you can mix Clojure, Ruby, and Java in the same server.

Toby Crawley gave a presentation on this.

* Roadmap

Coming "soon":
- Websockets support

  
* /fin/

Immutant gives you a nice, turkey solution for building non-trivial
Clojure (and Ruby!) web applications with all the fixings.
